// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "09/23/2020 21:05:11"
                                                                                
// Verilog Test Bench template for design : exp3_2
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module exp3_2_vlg_tst();
// constants                                           
// general purpose registers
//reg eachvec;
// test vector input registers
reg [2:0] KEY;
reg [7:0] SW;
// wires                                               
wire [5:0]  LEDR;

// assign statements (if any)                          
exp3_2 i1 (
// port map - connection between master ports and signals/registers   
	.KEY(KEY),
	.LEDR(LEDR),
	.SW(SW)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
   KEY[2:0]=3'b000; SW[3:0]=4'b1001; SW[7:4]=4'b0011; #20;	//-7+3=-4    1100 0 0
	KEY[2:0]=3'b001;												#20;	//-7-3=-10   0110 1 1
	KEY[2:0]=3'b010;												#20;	//0110
	KEY[2:0]=3'b011;												#20;	//0001
	KEY[2:0]=3'b100;												#20;	//1011
	KEY[2:0]=3'b101;												#20;	//1010
	KEY[2:0]=3'b110;												#20;	//0
	KEY[2:0]=3'b111;												#20;	//0
   KEY[2:0]=3'b000; SW[3:0]=4'b0001; SW[7:4]=4'b0100; #20;	//1+4=5      0101 0 0
	KEY[2:0]=3'b001;												#20;	//1-4=-3     1101 0 0
	KEY[2:0]=3'b010;												#20;	//1110
	KEY[2:0]=3'b011;												#20;	//0000
	KEY[2:0]=3'b100;												#20;	//0101
	KEY[2:0]=3'b101;												#20;	//0101
	KEY[2:0]=3'b110;												#20;	//0
	KEY[2:0]=3'b111;												#20;	//0
   KEY[2:0]=3'b000; SW[3:0]=4'b1101; SW[7:4]=4'b1111; #20;	//-3+(-1)=-4 1100 1 0
	KEY[2:0]=3'b001;												#20;	//-3-(-1)=-2 1110 0 0
	KEY[2:0]=3'b010;												#20;	//0010
	KEY[2:0]=3'b011;												#20;	//1101
	KEY[2:0]=3'b100;												#20;	//1111
	KEY[2:0]=3'b101;												#20;	//0010
	KEY[2:0]=3'b110;												#20;	//0
						  SW[3:0]=4'b0000;						#20;	//1
	KEY[2:0]=3'b111;												#20;	//0
												 SW[7:4]=4'b0000; #20;  //1
// --> end                                             
//$display("Running testbench");                       
end                                                    
//always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
//begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          
                                                       
//@eachvec;                                              
// --> end                                             
//end                                                    
endmodule

