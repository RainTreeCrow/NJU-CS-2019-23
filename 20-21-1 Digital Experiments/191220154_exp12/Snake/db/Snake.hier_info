|Snake
clk => clk.IN2
clrn => clrn.IN1
ps2_clk => ps2_clk.IN1
ps2_data => ps2_data.IN1
LED[0] <= kbd_output:my_kbd_output.direction
LED[1] <= kbd_output:my_kbd_output.direction
LED[2] <= kbd_output:my_kbd_output.run
LED[3] <= kbd_output:my_kbd_output.restart


|Snake|get_keyboard:my_get_keyboard
clk => fifo.we_a.CLK
clk => fifo.waddr_a[2].CLK
clk => fifo.waddr_a[1].CLK
clk => fifo.waddr_a[0].CLK
clk => fifo.data_a[7].CLK
clk => fifo.data_a[6].CLK
clk => fifo.data_a[5].CLK
clk => fifo.data_a[4].CLK
clk => fifo.data_a[3].CLK
clk => fifo.data_a[2].CLK
clk => fifo.data_a[1].CLK
clk => fifo.data_a[0].CLK
clk => buffer[0].CLK
clk => buffer[1].CLK
clk => buffer[2].CLK
clk => buffer[3].CLK
clk => buffer[4].CLK
clk => buffer[5].CLK
clk => buffer[6].CLK
clk => buffer[7].CLK
clk => buffer[8].CLK
clk => buffer[9].CLK
clk => ready~reg0.CLK
clk => overflow~reg0.CLK
clk => r_ptr[0].CLK
clk => r_ptr[1].CLK
clk => r_ptr[2].CLK
clk => w_ptr[0].CLK
clk => w_ptr[1].CLK
clk => w_ptr[2].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => ps2_clk_sync[0].CLK
clk => ps2_clk_sync[1].CLK
clk => ps2_clk_sync[2].CLK
clk => fifo.CLK0
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => overflow.OUTPUTSELECT
clrn => ready.OUTPUTSELECT
clrn => fifo.OUTPUTSELECT
clrn => buffer[0].ENA
clrn => buffer[1].ENA
clrn => buffer[2].ENA
clrn => buffer[3].ENA
clrn => buffer[4].ENA
clrn => buffer[5].ENA
clrn => buffer[6].ENA
clrn => buffer[7].ENA
clrn => buffer[8].ENA
clrn => buffer[9].ENA
ps2_clk => ps2_clk_sync[0].DATAIN
ps2_data => always1.IN1
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
data[0] <= fifo.DATAOUT
data[1] <= fifo.DATAOUT1
data[2] <= fifo.DATAOUT2
data[3] <= fifo.DATAOUT3
data[4] <= fifo.DATAOUT4
data[5] <= fifo.DATAOUT5
data[6] <= fifo.DATAOUT6
data[7] <= fifo.DATAOUT7
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => ready.OUTPUTSELECT
overflow <= overflow~reg0.DB_MAX_OUTPUT_PORT_TYPE


|Snake|kbd_output:my_kbd_output
clk => clk_my.CLK
clk => count_clk[0].CLK
clk => count_clk[1].CLK
clk => count_clk[2].CLK
clk => count_clk[3].CLK
clk => count_clk[4].CLK
clk => count_clk[5].CLK
clk => count_clk[6].CLK
ready => nextdata_n~reg0.DATAIN
ready => restart~reg0.ENA
ready => direction[1]~reg0.ENA
ready => direction[0]~reg0.ENA
ready => run~reg0.ENA
ready => off.ENA
overflow => ~NO_FANOUT~
data[0] => Decoder0.IN7
data[0] => Equal1.IN3
data[0] => Equal2.IN7
data[0] => Equal3.IN3
data[0] => Equal4.IN2
data[0] => Equal5.IN2
data[0] => Equal6.IN7
data[1] => Decoder0.IN6
data[1] => Equal1.IN7
data[1] => Equal2.IN6
data[1] => Equal3.IN2
data[1] => Equal4.IN1
data[1] => Equal5.IN7
data[1] => Equal6.IN3
data[2] => Decoder0.IN5
data[2] => Equal1.IN2
data[2] => Equal2.IN2
data[2] => Equal3.IN7
data[2] => Equal4.IN7
data[2] => Equal5.IN6
data[2] => Equal6.IN6
data[3] => Decoder0.IN4
data[3] => Equal1.IN1
data[3] => Equal2.IN1
data[3] => Equal3.IN1
data[3] => Equal4.IN6
data[3] => Equal5.IN1
data[3] => Equal6.IN2
data[4] => Decoder0.IN3
data[4] => Equal1.IN0
data[4] => Equal2.IN0
data[4] => Equal3.IN0
data[4] => Equal4.IN5
data[4] => Equal5.IN5
data[4] => Equal6.IN1
data[5] => Decoder0.IN2
data[5] => Equal1.IN6
data[5] => Equal2.IN5
data[5] => Equal3.IN6
data[5] => Equal4.IN0
data[5] => Equal5.IN0
data[5] => Equal6.IN5
data[6] => Decoder0.IN1
data[6] => Equal1.IN5
data[6] => Equal2.IN4
data[6] => Equal3.IN5
data[6] => Equal4.IN4
data[6] => Equal5.IN4
data[6] => Equal6.IN0
data[7] => Decoder0.IN0
data[7] => Equal1.IN4
data[7] => Equal2.IN3
data[7] => Equal3.IN4
data[7] => Equal4.IN3
data[7] => Equal5.IN3
data[7] => Equal6.IN4
direction[0] <= direction[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
direction[1] <= direction[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
nextdata_n <= nextdata_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
run <= run~reg0.DB_MAX_OUTPUT_PORT_TYPE
restart <= restart~reg0.DB_MAX_OUTPUT_PORT_TYPE


