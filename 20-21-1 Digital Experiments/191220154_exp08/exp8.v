
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module exp8(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// PS2 //////////
	inout 		          		PS2_CLK,
	inout 		          		PS2_CLK2,
	inout 		          		PS2_DAT,
	inout 		          		PS2_DAT2
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

	reg [7:0] scancode;
	reg [7:0] times = 0;
	reg caps = 0;
	reg nextdata = 0;
	reg en = 1;
	reg flag = 1;
	wire clk_1s;
	wire [7:0] code,ascii;
	wire clr,ready,overflow;
	assign clr = SW[0];

	ps2_keyboard p(CLOCK_50,clr,PS2_CLK,PS2_DAT,code,ready,nextdata,overflow);
	ascii r(scancode,caps,ascii);
	hex h0(scancode[3:0],en,HEX0);
	hex h1(scancode[7:4],en,HEX1);
	hex h2(ascii[3:0],en,HEX2);
	hex h3(ascii[7:4],en,HEX3);
	hex h4(times[3:0],1'b1,HEX4);
	hex h5(times[7:4],1'b1,HEX5);
	clk_1s c(CLOCK_50,clk_1s);

//=======================================================
//  Structural coding
//=======================================================

	always @ (posedge clk_1s) begin
		if(ready && nextdata) begin
			nextdata <= 0;
			scancode <= code;
			if(code == 8'hf0) begin
				times <= times + 1;
				flag <= 1;  
			end
			else begin
				if(flag) begin
					en <= 0;
					flag <= 0;
					if(code == 8'h58)
						caps <= ~caps;
				end
				else en <= 1;
			end
		end
		else nextdata <= 1;
	end

endmodule
