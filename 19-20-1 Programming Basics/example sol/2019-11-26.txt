//第一题
#include <iostream>
#include <algorithm>

using namespace std;

#define N 1000
#define NUMBERS_IN_PRODUCT 4

int numbers[N][N];

int main() {

	int n, m;
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> numbers[i][j];
		}
	}

	int max_product = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			int curr = numbers[i][j];

			// vertically
			if (i <= n - NUMBERS_IN_PRODUCT) {
				int temp = curr;
				for (int k = 1; k < NUMBERS_IN_PRODUCT; k++) {
					temp *= numbers[i + k][j];
				}
				max_product = max(max_product, temp);
			}

			// horisontally
			if (j <= m - NUMBERS_IN_PRODUCT) {
				int temp = curr;
				for (int k = 1; k < NUMBERS_IN_PRODUCT; k++) {
					temp *= numbers[i][j + k];
				}
				max_product = max(max_product, temp);
			}

			// diagonally
			if ((i <= n - NUMBERS_IN_PRODUCT) && (j <= m - NUMBERS_IN_PRODUCT)) {
				int temp = curr;
				for (int k = 1; k < NUMBERS_IN_PRODUCT; k++) {
					temp *= numbers[i + k][j + k];
				}
				max_product = max(max_product, temp);
			}

			// antidiagonally
			if ((j <= n - NUMBERS_IN_PRODUCT) && (i >= NUMBERS_IN_PRODUCT - 1)) {
				int temp = curr;
				for (int k = 1; k < NUMBERS_IN_PRODUCT; k++) {
					temp *= numbers[i - k][j + k];
				}
				max_product = max(max_product, temp);
			}
		}
	}

	cout << max_product << endl;

	return 0;
}

//第二题
#include<stdio.h>
#include<string.h>
using namespace std;
int main() {
    char number1[1500], number2[1500];
    scanf("%s%s", number1, number2);
    int n = strlen(number1), m = strlen(number2);
    int a[n], b[m]; 
    int i, j; 
    for (i = 0, j = n - 1; i < n; i++, j--) {
        a[i] = number1[j] - '0';
    }
    for (i = 0, j = m - 1; i < m; i++, j--) {
        b[i] = number2[j] - '0';
    }
    int c[3000];
    for (i = 0; i < 3000; i++) {
        c[i] = 0;
    }
    for (i = 0; i < n; i++) {
        for (j = 0; j < m; j++) {
            c[i + j] += a[i] * b[j];
        }
    }
    for (i = 0; i < n + m; i++) {
        if (c[i] >= 10) {
            c[i + 1] += c[i] / 10;
            c[i] %= 10;
        }
    }
    for (j = 2999; j > 0; j--) {
        if (c[j] != 0)
        break;
    }
    for (i = j; i >= 0; i--) {
    printf("%d", c[i]);
    }
    printf("\n");
    return 0;
}

//第三题
#include<stdio.h>
 
int a[10010], n, x = 2147483647, p;
 
int main() {
    while (scanf("%d", &a[++n]) != EOF) {
        if (a[n] < x) {
            x = a[n];
            p = n;
        }
    }
    a[p] = 0;
    for (int i = 1; i <= n-1; ++i) printf("%d ", a[i]);
    return 0;
}

//第四题
#include<iostream>
#include<cstdlib>
#include<iomanip>
using namespace std;

void Sort(int d[],int n,bool (*compr)(int x,int y));
bool Ascend(int x,int y);
bool Descend(int x,int y);

int main()
{
	int i,n,data[100];
	cin>>n;
	for (i=1;i<n+1;i++)
		cin>>data[i];
	Sort(data,n,Ascend);
	for (i=1;i<n+1;i++)
		cout<<" "<<data[i];
	cout<<endl;
	Sort(data,n,Descend);
	for (i=1;i<n+1;i++)
		cout<<" "<<data[i];
	cout<<endl;
	return 0;
}
 
void Sort(int d[],int n,bool (*compr)(int x,int y))
{
	int i,j,p,t;
	for (i=2; i<n+1; i++)
	{
		t=d[i];
		for (p=1;p<i;p++)
			if (compr(d[p],t)) break;
		if (p==i) continue;
		for(j=i-1;j>=p;j--) d[j+1]=d[j];
		d[p]=t;
	}
}

bool Ascend(int x,int y)
{
	return x>y;
}

bool Descend(int x,int y)
{
	return x<y;
}

//第五题
#include<iostream>
using namespace std;
int main() {
	char a[100];
	cin.getline(a, 100);
	int i = 0;
	int c = 0;
	int b = 0;
	while (a[i] != '\0') {
		if (a[i] == '(')
			c++;
		if (a[i] == ')')
			b++;
		i++;
	}
	if (c == b)
		cout << "correct";
	else
		cout << "false";
	//system("pause");
	return 0;
} 

//第六题
#include<cstdio>
#include<algorithm>
using namespace std;
 
int cut[3];
int f[40100];
 
 
int main()
{
    int n;
    scanf("%d",&n);
     
    for(int i=0;i<3;i++)
    {
        scanf("%d",&cut[i]);
        f[cut[i]]=1;
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<3;j++)
        {
            if(i-cut[j]<0 || !f[i-cut[j]]) continue;
            f[i]=max(f[i],1+f[i-cut[j]]);
        }
    }
     
    printf("%d",f[n]);
     
    return 0;
}

//第七题
#include<iostream>
using namespace std;
int main() {
	int n, m;
	cin >> n >> m;
	struct grade {
		int a;
		int b;
		int c;
		int d;
	};
	int t[1105];
	int f[1005];
	int h[103][21];
	grade grades[1100];
	int i = 1;
	while (i <= m) {
		cin >> grades[i].a >> grades[i].b >> grades[i].c >> grades[i].d;
		i++;
	}
	int j;
	for (i = 1; i <= 20; i++) {
		for (j = 1; j <= 100; j++) {
			h[j][i] = 0;
		}
	}
	int time[1005];
	for (i = 1; i <1000; i++) {
		f[i] = 0;
		time[i] = 0;
	}
	for (i = 1; i <= n; i++) {
		t[i] = 0;
		j = 1;
		while (j <= m) {
			if (grades[j].a == i) {
				if (grades[j].d == 1) {
					h[i][grades[j].b] = h[i][grades[j].b] + m;
					time[i] = time[i] + grades[j].c;
					t[i]++;
				}
				else
					h[i][grades[j].b]++;
			}
			j++;
		}

	}
	int k;
	for (i = n; i >= 1; i--) {
		int max = 1;
		for (j = 2; j <= n; j++) {
			if (t[max] > t[j])
				max = max;
			if (t[max] == t[j]) {
				for (k = 1; k <= 20; k++) {
					if (h[max][k] >= m)
						time[max] = time[max] + (h[max][k] - m) * 1200;
				}
				for (k = 1; k <= 20; k++) {
					if (h[j][k] >= m)
						time[j] = time[j] + (h[j][k] - m) * 1200;
				}
				if (time[max] > time[j])
					max = j;
				if (time[max] == time[j]) {
					if (max > j)
						max = j;
					else
						max = max;
				}
				if (time[max] < time[j])
					max = max;
			}
			if (t[max] < t[j])
				max = j;
		}
		f[i - 1] = max;
		t[max] = -1;
	}
	for (i = n - 1; i >= 0; i--)
		cout << f[i] << " ";
	//system("pause");
	return 0;
}